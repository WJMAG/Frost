name: Build and Deploy Frost

on:
  push:
    branches: [main]
    paths: [ 'api/**', 'src/**', 'test-shard/**', 'gradle/libs.versions.toml' ]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: docker-private.repo.minestudio.host
  IMAGE_NAME: docker-private.repo.minestudio.host/user/frost
  JAVA_VERSION: '21'
  NODE_VERSION: '22'

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.tag_image.outputs.tag }}
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Build with Gradle
        run: ./gradlew build

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REPO_PRIVATE_USER }}
          password: ${{ secrets.REPO_PRIVATE_PASS }}

      - name: Generate tag
        id: tag_image
        run: |
          echo "tag=latest" >> $GITHUB_OUTPUT
          # Or use a commit-based tag: echo "tag=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build and Push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ env.IMAGE_NAME }}:${{ steps.tag_image.outputs.tag }}